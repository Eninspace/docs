site_name: Developer Documentation
site_url: https://docs.fetch.ai/
site_description: Everything you need to know about Fetch.ai.
repo_url: https://github.com/fetchai/docs
edit_uri: '' # currently doesn't work with monorepo
site_author: developer@fetch.ai

google_analytics: ['UA-118969813-3', 'auto']


theme:
  name: material
  logo: images/logo.png
  favicon: assets/images/favicon.ico
  feature:
    tabs: true
  custom_dir: custom_theme

nav:
  - Home : "index.md"

  - Agent Framework: '!include ./aea/mkdocs.yml'

  - Ledger:
    - Introduction: 'ledger/index.md'

    - Ledger v2:
      - Introduction: 'ledger_v2/index.md'
      - Installation: 'ledger_v2/building.md'
      - Versions: 'ledger_v2/versions.md'
      - Networks: 'ledger_v2/networks.md'
      - Commandline Client:
        - Introduction: 'ledger_v2/cli-introduction.md'
        - Keys: 'ledger_v2/cli-keys.md'
        - Tokens: 'ledger_v2/cli-tokens.md'
      - Block Explorer: 'ledger_v2/block-explorer.md'
      - Governance: 'ledger_v2/governance.md'
      - Docker Images: 'ledger_v2/docker-images.md'
      - Faucet: 'ledger_v2/faucet.md'
      - Python Examples: 'ledger_v2/python-examples.md'

    - Ledger v1:
      - Introduction: 'ledger_v1/index.md'

      - Using the ledger:
        - Introduction: 'ledger_v1/walkthrough/index.md'
        - Creating addresses: 'ledger_v1/walkthrough/creating-addresses.md'
        - Getting testnet tokens: 'ledger_v1/walkthrough/testnet-tokens.md'
        - Making transfers: 'ledger_v1/walkthrough/transfers-and-balances.md'
        - Deploying smart contracts: 'ledger_v1/walkthrough/smart-contracts.md'

      - Smart Contracts:
        - Introduction: 'ledger_v1/smart-contracts/smart-contract-intro.md'
        - Static and dynamic contracts: 'ledger_v1/smart-contracts/static-dynamic.md'
        - Fetch.ai smart contracts:
          - 'Smart contracts in Etch': 'ledger_v1/smart-contracts/etch-smart-contracts.md'
          - 'Development environment': 'ledger_v1/smart-contracts/pipenv.md'
          - 'Executing smart contracts': 'ledger_v1/smart-contracts/executing-smart-contract-code.md'
        - Synergetic contracts:
          - 'Synergetic contracts': 'ledger_v1/smart-contracts/synergetic.md'
          - 'Executing synergetic contracts': 'ledger_v1/smart-contracts/executing-synergetic-code.md'
        - 'Memory': 'ledger_v1/smart-contracts/memory.md'
        - 'Fees': 'ledger_v1/smart-contracts/fees.md'

      - Machine Learning library:
        - Introduction: 'ledger_v1/machine-learning/index.md'
        - Architecture: 'ledger_v1/machine-learning/library-architecture.md'
        - Getting started: 'ledger_v1/machine-learning/getting-started.md'
        - AI in smart contracts: 'ledger_v1/machine-learning/smart-contract-example.md'
        - AI in synergetic contracts: 'ledger_v1/machine-learning/synergetic-contract-example.md'

      - Maths library: 'ledger_v1/maths-lib-overview.md'

      - Python API:
        - Installation: 'ledger_v1/python-ledger-api/python-api-install.md'
        - Examples :
          - Block Number : "ledger_v1/python-ledger-api/examples/block-number.md"

      - Etch Language:
        - Introduction: 'ledger_v1/etch-language/index.md'
        - Usage:
            - 'Getting started': 'ledger_v1/etch-language/getstarted.md'
            - 'Debugging': 'ledger_v1/etch-language/debug.md'
            # - 'Release notes': 'ledger/etch-language/release-notes.md'
        - The Basics:
            - 'Syntax': 'ledger_v1/etch-language/syntax.md'
            - 'Variables': 'ledger_v1/etch-language/variables.md'
            - 'Operators': 'ledger_v1/etch-language/operators.md'
            - 'Logical operators': 'ledger_v1/etch-language/logic.md'
            - 'Control flow': 'ledger_v1/etch-language/control-flow.md'
            - 'Strings': 'ledger_v1/etch-language/strings.md'
            - 'Arrays': 'ledger_v1/etch-language/arrays.md'
            - 'Functions': 'ledger_v1/etch-language/functions.md'
            - Function Annotations:
              - 'Smart contract annotations': 'ledger_v1/etch-language/sc-annotations.md'
              - 'Synergetic contract annotations': 'ledger_v1/etch-language/syn-annotations.md'
            - 'Error checking': 'ledger_v1/etch-language/error-checking.md'
        - Fetch Ledger Types:
            - 'Persistent globals': 'ledger_v1/etch-language/persistent-globals.md'
            - 'State': 'ledger_v1/etch-language/states.md'
            - 'ShardedState': 'ledger_v1/etch-language/sharded-state.md'
            - 'Address': 'ledger_v1/etch-language/addresses.md'
            - 'Cryptographic functions': 'ledger_v1/etch-language/crypto.md'
            - 'Context': 'ledger_v1/etch-language/context.md'
            - 'Transaction': 'ledger_v1/etch-language/transaction.md'
            - 'Balance and Transfer': 'ledger_v1/etch-language/balance-transfer.md'
        - Mathematics:
            - 'Maths functions': 'ledger_v1/etch-language/maths-functions.md'
            - 'Tensor': 'ledger_v1/etch-language/tensor.md'
        - Machine Learning:
            - 'Model': 'ledger_v1/etch-language/model.md'
            - 'Graph': 'ledger_v1/etch-language/graph.md'
            - 'DataLoader': 'ledger_v1/etch-language/data-loaders.md'
            - 'Optimiser': 'ledger_v1/etch-language/optimiser.md'
            - 'Scaler': 'ledger_v1/etch-language/scaler.md'
        - Examples:
            - 'Fetch logo': 'ledger_v1/etch-language/examples/fetch-logo.md'
            - 'Mandelbrot': 'ledger_v1/etch-language/examples/mandelbrot.md'
            - 'Searching algorithms': 'ledger_v1/etch-language/examples/searching-algorithms.md'
            - 'Sorting algorithms': 'ledger_v1/etch-language/examples/sorting-algorithms.md'
            - 'Discrete Fourier Transformation': 'ledger_v1/etch-language/examples/dft.md'

      - Deploying nodes:
        - Building the code:
          - MacOS: 'ledger_v1/installation/installation-mac.md'
          - Ubuntu: 'ledger_v1/installation/installation-ubuntu.md'
          - Redhat: 'ledger_v1/installation/installation-redhat.md'
        - Running a node: 'ledger_v1/running-a-constellation.md'
        - Architecture: 'ledger_v1/architecture.md'

  - Incentivized Testnets:
    - Introduction: 'i_nets/index.md'
    - Agent World 1: 'i_nets/quickstart-aw1.md'
    - Agent World 2: 'i_nets/quickstart-aw2.md'
    - Agent World 3: 'i_nets/quickstart-aw3.md'
    - Beacon World 1: 'i_nets/quickstart-bw1.md'

  - Bounty:
    - AEA Docs: 'bounty/aea-docs-bounty.md'

extra_css:
  - css/style.css

markdown_extensions:
  - admonition
  - pymdownx.superfences
  - pymdownx.highlight


extra_javascript:
    - https://unpkg.com/mermaid@7.1.2/dist/mermaid.min.js

plugins:
  - monorepo
  - search
